//Math++.js
//Developed By Elijah629.
console.log("[Math++] LOADING...");window.onload = (event) => {console.log("[Math++] The page has fully loaded");console.log("[Math++] Library Loaded Succesfully");console.log("M++ V 1.0.0");console.log("-----------------");};Math.add = (x) => {if (!x.some(isNaN)) {var xr = x.reduce(function (a, b) {return a + b;});return xr;} else {console.log("[Math++] Must Be A Numeric Equation.");return null;}};Math.div = (x) => {if (!x.some(isNaN)) {var xr = x.reduce(function (a, b) {return a / b;});return xr;} else {console.log("[Math++] Must Be A Numeric Equation.");return null;}};Math.mult = (x) => {if (!x.some(isNaN)) {var xr = x.reduce(function (a, b) {return a * b;});return xr;} else {console.log("[Math++] Must Be A Numeric Equation.");return null;}};Math.sub = (x) => {if (!x.some(isNaN)) {var xr = x.reduce(function (a, b){return a - b;});return xr;} else {console.log("[Math++] Must Be A Numeric Equation.");return null;}};Math.m = (x, m) => {if (!x.some(isNaN)) {if (m == "M" || m == "m") {var xm = x.reduce(function (a, b) {return a * b;});return xm;} else if (m == "A" || m == "a") {var xa = x.reduce(function (a, b) {return a + b;});return xa;} else if (m == "S" || m == "s") {var xs = x.reduce(function (a, b) {return a - b;});return xs;} else if (m == "d" || m == "D") {var xd = x.reduce(function (a, b) {return a / b;});return xd;} else {console.log("[Math++] ERROR NOT A CORRECT VALUE");return null;}} else {console.log("[Math++] Must Be A Numeric Equation.");return null;}};Math.VmRm = (x) => {return x;};Math.count = (s, f, e, m = "") => {e.innerHTML = "";if (m == "true") {f++;for (var i = s; i < f; i++) {var o;o = i + "<br>";e.innerHTML += o;}} else if (m == "false") {f++;for (var i = s; i < f; i++) {var o;o = i + " ";e.innerHTML += o;}} else {console.log("[Math++] Error Incorect / No Value");return null;}};Math.cRandom = (m, g, e, r, a) => {e.innerHTML = "";if (!isNaN(m) && !isNaN(g)){if (r == "u" || r == "U") {if (a == "false") {for (var i = 0; i < m; i++) {var x = Math.ceil((Math.random() * g) + 1);e.innerHTML += x;}} else if (a == "true") {for (var i = 0; i < m; i++) {var x = Math.ceil((Math.random() * g) + 1);var z;z = x + "<br>";e.innerHTML += z;}}} else if (r == "d" || r == "D") {if (a == "true") {for (var i = 0; i < m; i++) {var x = Math.floor((Math.random() * g) + 1);var z;z = x + "<br>";e.innerHTML += z;}} else if (a == "false") {for (var i = 0; i < m; i++) {var x = Math.floor((Math.random() * g) + 1);e.innerHTML += x;}} else {console.log("Must Be A Correct Value");return null;}} else {console.log("Must Be A Correct Value");return null;}}else {console.log("First 2 Values (m and g) Must Be Numbers");return null;}};Math.circle = (r = 0, fc = "black", lw = 1, sc = "black") => {var canvas = document.createElement('canvas');document.body.appendChild(canvas);var context = canvas.getContext("2d");var rtc = r * 1.1 + lw / 2;var ltc = r * 1.1 + lw / 2;canvas.height = r * 2.2 + lw;canvas.width = r * 2.2 + lw;context.beginPath();context.arc(rtc, ltc, r, 0, 2 * Math.PI, false);context.fillStyle = fc;context.fill();context.lineWidth = lw;context.strokeStyle = sc;context.stroke();};Math.square = (h = 0, w = 0, fc = "black") =>{var canvas = document.createElement('canvas');document.body.appendChild(canvas);canvas.height = h;canvas.width = w;var context = canvas.getContext("2d");context.fillStyle = fc;context.fillRect("", "", w, h);};Math.octo = (n,s,lw,lc,fc) => { var canvas = document.createElement('canvas');document.body.appendChild(canvas);
/**/var ctx = canvas.getContext("2d");var numberOfSides = n;var size = s;canvas.width = size / 0.5;canvas.height = size / 0.5;var Xcenter = canvas.width / 2;var Ycenter = canvas.height / 2;ctx.beginPath();ctx.moveTo (Xcenter +  size * Math.cos(0), Ycenter +  size *  Math.sin(0));for (var i = 1; i <= numberOfSides; i += 1){ctx.fillStyle = fc;ctx.lineWidth = lw;ctx.strokeStyle = lc;ctx.lineTo (Xcenter + size * Math.cos(i * 2 * Math.PI / numberOfSides), Ycenter + size * Math.sin(i * 2 * Math.PI / numberOfSides));}ctx.fill();ctx.stroke();};Math.tri = (x1,y1,x2,y2,x3,y3,lw,ch,cw,lc,fc) => {var canvas = document.createElement('canvas');var context = canvas.getContext("2d");document.body.appendChild(canvas);canvas.height = ch;canvas.width = cw;context.beginPath();context.moveTo(x1, y1);context.lineTo(x2, y2);context.lineTo(x3, y3);context.closePath();context.lineWidth = lw;context.strokeStyle = lc;context.fillStyle = fc;context.fill();context.stroke();};var Ajax = {};Ajax.xhttp=(u,ei)=>{var xhttp = new XMLHttpRequest();xhttp.onreadystatechange = function() {if (this.readyState == 4 && this.status == 200) {document.getElementById(ei).innerHTML =this.responseText;}};xhttp.open("GET", u, true);xhttp.send();};Math.maxl = (x) => {if (!x.some(isNaN)) {x.sort(function(a, b){return b-a;});var o = x.join(", ");console.log(o);return o;} else {console.log("[Math++] Must Be A Number");return null;}};Math.minl = (x) => {if (!x.some(isNaN)) {x.sort(function(a, b){return a-b;});var o = x.join(", ");console.log(o);return o;} else {console.log("[Math++] Must Be A Number");return null;}};
// ------------------------------------------- //
